{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\projects\\\\reactnw\\\\reactnw\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\projects\\\\reactnw\\\\reactnw\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\projects\\\\reactnw\\\\reactnw\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hey, how are you?',\n    likes: 412\n  }, {\n    id: 2,\n    message: 'It\\'s my third post',\n    likes: 111\n  } // {id: 3, message: 'my third post', likes: 11},\n  // {id: 4, message: 'It\\'s third post', likes: 21},\n  // {id: 5, message: 'It\\'s my post', likes: 34},\n  ],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: '',\n        message: action.newPostText,\n        likes: Math.ceil(Math.random() * 10)\n      };\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: [...state.posts, newPost]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        profile: action.profile\n      });\n\n    case SET_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: action.status\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfile = userId => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return usersAPI.getProfile(userId);\n\n        case 2:\n          response = _context.sent;\n          dispatch(setUserProfile(response.data));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const getStatus = userId => /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return profileAPI.getStatus(userId);\n\n        case 2:\n          response = _context2.sent;\n          dispatch(setStatus(response.data));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport const updateStatus = status => /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return profileAPI.updateStatus(status);\n\n        case 2:\n          response = _context3.sent;\n\n          if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n          }\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // export const setUsersProfile = (userId) => ({\n//     return (dispatch) => {\n//     userId = this.props.match.params.userId;\n//     if (!userId) {\n//     userId = 9340;\n// }\n// axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n//     .then(response => {\n//         this.props.setUserProfile(response.data);\n//     });\n//\n// })\n\nexport default profileReducer;","map":{"version":3,"sources":["C:/projects/reactnw/reactnw/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likes","profile","status","profileReducer","state","action","type","newPost","newPostText","Math","ceil","random","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hey, how are you?', likes: 412},\r\n        {id: 2, message: 'It\\'s my third post', likes: 111},\r\n        // {id: 3, message: 'my third post', likes: 11},\r\n        // {id: 4, message: 'It\\'s third post', likes: 21},\r\n        // {id: 5, message: 'It\\'s my post', likes: 34},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: '',\r\n                message: action.newPostText,\r\n                likes: Math.ceil(Math.random() * 10),\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n// export const setUsersProfile = (userId) => ({\r\n//     return (dispatch) => {\r\n//     userId = this.props.match.params.userId;\r\n//     if (!userId) {\r\n//     userId = 9340;\r\n// }\r\n// axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n//     .then(response => {\r\n//         this.props.setUserProfile(response.data);\r\n//     });\r\n//\r\n// })\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}