{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\reactnw\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\reactnw\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport s from \"./Paginator.module.css\";\nimport React, { useState } from \"react\";\n\nconst Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n\n  let _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.pagesBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"span\", {\n    className: s.pagesToggle,\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Prev\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: currentPage === p && s.selectedPage,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: s.pagesBtnsOne,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, p));\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"span\", {\n    className: s.pagesToggle,\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Next\")));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["C:/projects/reactnw/src/components/common/Paginator/Paginator.jsx"],"names":["s","React","useState","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","pagesBtns","pagesToggle","filter","p","map","selectedPage","e","pagesBtnsOne"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,wBAAd;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,aAAzC;AAAwDC,EAAAA,WAAW,GAAG;AAAtE,CAAD,KAA+E;AAC7F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAACD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AAAe;;AAEtD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;;AAL6F,kBAMrDN,QAAQ,CAAC,CAAD,CAN6C;AAAA;AAAA,MAMxFc,aANwF;AAAA,MAMzEC,gBANyE;;AAO7F,MAAIC,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAER,CAAC,CAACoB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEH;AAAK,IAAA,SAAS,EAAEpB,CAAC,CAACqB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,aAAa,GAAG,CAAhB,iBACF;AAAM,IAAA,SAAS,EAAEhB,CAAC,CAACsB,WAAnB;AAAgC,IAAA,OAAO,EAAE,MAAM;AAAEL,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKJ,KAAK,CACDW,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIN,qBAAL,IAA8BM,CAAC,IAAIL,sBADnD,EAEIM,GAFJ,CAEQD,CAAC,IAAI;AACV,wBAAO;AAAM,MAAA,SAAS,EAAElB,WAAW,KAAKkB,CAAhB,IAAqBxB,CAAC,CAAC0B,YAAxC;AACM,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZpB,QAAAA,aAAa,CAACiB,CAAD,CAAb;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIK;AAAM,MAAA,SAAS,EAAExB,CAAC,CAAC4B,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCJ,CAAlC,CAJL,CAAP;AAMH,GATA,CAHL,EAaKT,YAAY,GAAGC,aAAf,iBACD;AAAM,IAAA,SAAS,EAAEhB,CAAC,CAACsB,WAAnB;AAAgC,IAAA,OAAO,EAAE,MAAM;AAAEL,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,CAFG,CAAP;AAmBH,CA7BD;;AA+BA,eAAeb,SAAf","sourcesContent":["import s from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {pages.push(i);}\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n\r\n        <div className={s.pagesBtns}>\r\n            { portionNumber > 1 &&\r\n            <span className={s.pagesToggle} onClick={() => { setPortionNumber(portionNumber - 1) }}>Prev</span>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={currentPage === p && s.selectedPage}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}>\r\n                            <span className={s.pagesBtnsOne}>{p}</span>\r\n                            </span>\r\n            })}\r\n            {portionCount > portionNumber &&\r\n            <span className={s.pagesToggle} onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}