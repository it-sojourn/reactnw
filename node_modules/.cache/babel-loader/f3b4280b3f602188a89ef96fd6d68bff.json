{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\reactnw\\\\reactnw\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Element } from \"../common/FormControls/FormControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators\";\n\nconst Dialogs = props => {\n  let state = props.messagePage;\n  let dialogsElements = state.dialogs.map(d => /*#__PURE__*/React.createElement(DialogItem, {\n    key: d.id,\n    name: d.name,\n    id: d.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }\n  }));\n  let messagesElements = state.messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    key: m.id,\n    message: m.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }\n  }));\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogsitems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, dialogsElements), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, messagesElements), /*#__PURE__*/React.createElement(AddMessageReduxForm, {\n    onSubmit: addNewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst maxLength15 = maxLengthCreator(15);\nconst Textarea = Element('textarea');\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Textarea,\n    name: 'newMessageBody',\n    placeholder: 'Write anything',\n    validate: [required, maxLength15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Send\"))));\n};\n\nconst AddMessageReduxForm = reduxForm({\n  form: 'addMessage'\n})(AddMessageForm);\nexport default Dialogs;","map":{"version":3,"sources":["C:/projects/reactnw/reactnw/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","Element","maxLengthCreator","required","Dialogs","props","state","messagePage","dialogsElements","dialogs","map","d","id","name","messagesElements","messages","m","message","addNewMessage","values","sendMessage","newMessageBody","dialogsitems","maxLength15","Textarea","AddMessageForm","addMessage","handleSubmit","AddMessageReduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,OAAR,QAAsB,qCAAtB;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,wBAAzC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,WAAlB;AAEA,MAAIC,eAAe,GAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAClBC,CAAC,iBAAI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAnB;AAAuB,IAAA,IAAI,EAAED,CAAC,CAACE,IAA/B;AAAqC,IAAA,EAAE,EAAEF,CAAC,CAACC,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAAtB;AAGA,MAAIE,gBAAgB,GAAGR,KAAK,CAACS,QAAN,CAAeL,GAAf,CACnBM,CAAC,iBAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,CAAC,CAACJ,EAAhB;AAAoB,IAAA,OAAO,EAAEI,CAAC,CAACC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAvB;;AAIA,MAAIC,aAAa,GAAIC,MAAD,IAAY;AAC5Bd,IAAAA,KAAK,CAACe,WAAN,CAAkBD,MAAM,CAACE,cAAzB;AAEH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEzB,CAAC,CAACa,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEb,CAAC,CAAC0B,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,eADL,CADJ,eAII;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACmB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,gBADL,CAJJ,eAOI,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAEI,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH,CA1BD;;AA2BA,MAAMK,WAAW,GAAGrB,gBAAgB,CAAC,EAAD,CAApC;AACA,MAAMsB,QAAQ,GAAGvB,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMwB,cAAc,GAAIpB,KAAD,IAAW;AAC9B,sBAAO;AAAK,IAAA,SAAS,EAAET,CAAC,CAAC8B,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAM,IAAA,QAAQ,EAAErB,KAAK,CAACsB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEH,QAAlB;AAA4B,IAAA,IAAI,EAAE,gBAAlC;AACO,IAAA,WAAW,EAAE,gBADpB;AAEA,IAAA,QAAQ,EAAE,CAACrB,QAAD,EAAWoB,WAAX,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAVJ,CADG,CAAP;AAiBH,CAlBD;;AAoBA,MAAMK,mBAAmB,GAAG5B,SAAS,CAAC;AAClC6B,EAAAA,IAAI,EAAE;AAD4B,CAAD,CAAT,CAEzBJ,cAFyB,CAA5B;AAIA,eAAerB,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagePage;\r\n\r\n    let dialogsElements = state.dialogs.map(\r\n        d => <DialogItem key={d.id} name={d.name} id={d.id}/>\r\n    )\r\n    let messagesElements = state.messages.map(\r\n        m => <Message key={m.id} message={m.message}/>\r\n    )\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsitems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst Textarea = Element('textarea');\r\nconst AddMessageForm = (props) => {\r\n    return <div className={s.addMessage}>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Write anything'}\r\n                validate={[required, maxLength15]}\r\n                />\r\n                    {/*<textarea onChange={onNewMessageChange}*/}\r\n                    {/*          placeholder='Write anything'*/}\r\n                    {/*          value={newMessageBody}/>*/}\r\n            </div>\r\n            <div>\r\n                {/*<button onClick={onSendMessageClick}>Add message</button>*/}\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'addMessage'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}