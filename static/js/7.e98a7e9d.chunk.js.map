{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.js","utils/validators.js","components/Login/Login.jsx"],"names":["module","exports","Element","input","meta","props","hasError","touched","error","className","s","formControl","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,6JCGlH,MASMC,EAAUA,GAAY,IAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC3D,MAAMC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OAAO,yBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,KAC/D,6BAAK,kBAACN,EAAD,iBAAaC,EAAWE,KAE5BC,GAAY,8BAAOF,EAAKI,SAKpBI,EAAc,CAACC,EAAaC,EAAMC,EAAYC,EAAWX,EAAQ,GAAIY,EAAO,KACrF,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAAMI,SAAUH,EAAYC,UAAWA,GAAeX,IAC5FY,I,iCC1BT,oEAAO,MAAME,EAAYC,IACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAoBC,GAAeF,IAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,iCCNlC,+FAUA,MAAME,EAAStB,YAAQ,SAgBjBuB,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,CAdL,EAAEE,eAAcpB,WAE1B,0BAAMqB,SAAUD,GACXhB,YAAY,QAAS,QAAS,CAACO,KAAWK,GAC1CZ,YAAY,WAAY,WAAY,CAACO,KAAWK,EAAM,CAACM,KAAM,YAAY,IACzElB,YAAY,KAAM,aAAc,GAAGY,EAAM,CAACM,KAAM,YAAY,eAEzDtB,GAAS,0BAAMC,UAAWC,IAAEqB,kBAAmBvB,GAEnD,6BAAK,4CA4BFwB,sBAJUC,IAAD,CACpBC,OAAQD,EAAME,KAAKD,SAGiB,CAACE,WAA1BJ,CAnBA3B,GAKPA,EAAM6B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAGlB,6BACH,qCACA,kBAACZ,EAAD,CAAgBI,SAVFS,IACdjC,EAAM+B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.e98a7e9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2dijs\",\"error\":\"FormControls_error__35aL2\",\"formSummaryError\":\"FormControls_formSummaryError__JkNzc\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div><textarea {...input} {...props} /></div>\r\n\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div><Element {...input} {...props} /></div>\r\n\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />\r\n        {text}\r\n    </div>\r\n)","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {createField, Element} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from '../common/FormControls/FormControls.module.css';\r\n\r\n\r\nconst Input =  Element('input');\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input,{type: 'password'},'')}\r\n            {createField(null, 'rememberMe', [],Input,{type: 'checkbox'},'Remember me')}\r\n            {\r\n                error && <span className={s.formSummaryError}>{error}</span>\r\n            }\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}