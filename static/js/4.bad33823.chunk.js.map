{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.js","utils/validators.js","hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Element","input","meta","props","hasError","touched","error","className","s","formControl","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","React","render","this","to","connect","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","o","minLen","n","prototype","toString","call","slice","constructor","from","test","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likes","Textarea","maxLength10","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","MyPosts","console","log","postsElements","posts","map","p","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","componentDidMount","userId","match","params","authorizedUserId","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.bad33823.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2dijs\",\"error\":\"FormControls_error__35aL2\",\"formSummaryError\":\"FormControls_formSummaryError__JkNzc\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div><textarea {...input} {...props} /></div>\r\n\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div><Element {...input} {...props} /></div>\r\n\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />\r\n        {text}\r\n    </div>\r\n)","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export default function _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n    arr2[i] = arr[i];\r\n  }\r\n\r\n  return arr2;\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\r\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\r\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\r\nimport nonIterableRest from \"./nonIterableRest\";\r\nexport default function _slicedToArray(arr, i) {\r\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\r\n}","export default function _arrayWithHoles(arr) {\r\n  if (Array.isArray(arr)) return arr;\r\n}","export default function _iterableToArrayLimit(arr, i) {\r\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\r\n  var _arr = [];\r\n  var _n = true;\r\n  var _d = false;\r\n  var _e = undefined;\r\n\r\n  try {\r\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\r\n      _arr.push(_s.value);\r\n\r\n      if (i && _arr.length === i) break;\r\n    }\r\n  } catch (err) {\r\n    _d = true;\r\n    _e = err;\r\n  } finally {\r\n    try {\r\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\r\n    } finally {\r\n      if (_d) throw _e;\r\n    }\r\n  }\r\n\r\n  return _arr;\r\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\r\nexport default function _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\r\n}","export default function _nonIterableRest() {\r\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__6hdoP\",\"myDescriptionBlock\":\"ProfileInfo_myDescriptionBlock__2Mc5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__yzrYH\",\"posts\":\"MyPosts_posts__2PX6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__40C-V\"};","import React, {useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={ deactivateEditMode } value={status}/>\r\n            </div>\r\n            }\r\n        </div>)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <div>\r\n            <img src={profile.photos.large} alt='' />\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n          <img src='https://zm-cs.ru/files/avatars/1537189754.jpg' alt='ava'></img>\r\n            {props.message}\r\n            <div>{props.likes} Like</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Element} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    console.log('RENDER RENDER REKT')\r\n\r\n    let postsElements = props.posts.map(\r\n        p => <Post key={p.id} likes={p.likes} message={p.message}/>\r\n    )\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            {/*<div>*/}\r\n            {/*    <div>*/}\r\n            {/*        <textarea onChange={onPostChange}*/}\r\n            {/*                  placeholder='Tell plz about smth'*/}\r\n            {/*                  ref={newPostElement}*/}\r\n            {/*                  value={props.newPostText}/>*/}\r\n            {/*    </div>*/}\r\n            {/*    <div>*/}\r\n            {/*        <button onClick={onAddPost}>Add post</button>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n            <AddPostReduxForm onSubmit={addNewPost}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'}\r\n                       placeholder={'Tell smth'}\r\n                validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div><button>Post</button></div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const MyPostsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n//                     let onPostChange = (text) => {\r\n//                         let action = updateNewPostTextActionCreator(text);\r\n//                         store.dispatch(action);\r\n//                     };\r\n//                     return (<MyPosts updateNewPostText={onPostChange} addPost={addPost}\r\n//                                      posts={state.profilePage.posts}\r\n//                                      newPostText={state.profilePage.newPostText}/>)\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n            updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// compose(\r\n//     connect(mapStateToProps, {getUserProfile}),\r\n//     withAuthRedirect,\r\n//     withRouter,\r\n// )(ProfileContainer)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)\r\n;"],"sourceRoot":""}