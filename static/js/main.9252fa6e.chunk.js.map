{"version":3,"sources":["components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","redux/auth-reducer.js","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","redux/profile-reducer.js","redux/messages-reducer.js","redux/users-reducer.js","assets/images/preloader.gif","components/common/Preloader/Preloader.module.css","api/api.js"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","Header","props","header","src","alt","loginBlock","isAuth","login","onClick","logout","HeaderContainer","React","Component","render","this","connect","state","auth","initialState","initialized","appReducer","action","type","DialogsContainer","lazy","UsersContainer","ProfileContainer","Login","App","componentDidMount","initializeApp","Suspense","fallback","Preloader","path","compose","withRouter","app","dispatch","promise","getAuthUserData","Promise","all","then","friends","id","name","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagePage","messageReducer","sidebar","usersPage","usersReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","userId","email","setAuthUserData","payload","a","authAPI","me","response","data","resultCode","password","rememberMe","message","messages","length","stopSubmit","_error","preload","preloader","posts","likes","profile","status","addPostActionCreator","newPostText","setStatus","getUserProfile","usersAPI","getProfile","getStatus","profileAPI","updateStatus","newPost","Math","ceil","random","dialogs","sendMessageCreator","newMessageBody","newMessage","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsers","page","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","map","u","followed","filter","instance","axios","baseURL","withCredentials","headers","get","post","delete","console","warn","put"],"mappings":"wLACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,wCCWjEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8ECYSC,MA1BA,IACJ,yBAAKC,UAAWC,IAAEC,KACrB,yBAAKF,UAAWC,IAAEE,MACd,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,YAA1C,YAEJ,yBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEM,SAC3B,kBAAC,IAAD,CAASH,GAAG,WAAWC,gBAAiBJ,IAAEK,YAA1C,aAEJ,yBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEM,SAC3B,kBAAC,IAAD,CAASH,GAAG,SAASC,gBAAiBJ,IAAEK,YAAxC,W,wBCYGE,MArBCC,GACL,4BAAQT,UAAWC,IAAES,QACxB,yBACIC,IAAI,+IACJC,IAAI,SAGR,yBAAKZ,UAAWC,IAAEY,YAEVJ,EAAMK,OACA,6BACE,+CAAqBL,EAAMM,OAC3B,4BAAQC,QAASP,EAAMQ,QAAvB,YAEF,kBAAC,IAAD,CAASb,GAAI,UAAb,W,gBCbtB,MAAMc,UAAwBC,IAAMC,UAEhCC,SACI,OAAO,kBAAC,EAAWC,KAAKb,QAQjBc,kBAJUC,IAAD,CACpBV,OAAQU,EAAMC,KAAKX,OACnBC,MAAOS,EAAMC,KAAKV,QAEkB,CAACE,YAA1BM,CAAmCL,G,eCZlD,IAAIQ,EAAe,CACfC,aAAa,GAwBFC,MArBI,CAACJ,EAAQE,EAAcG,KACtC,OAAQA,EAAOC,MACX,IARoB,sBAShB,OAAO,2BACAN,GADP,IAEIG,aAAa,IAErB,QACI,OAAOH,I,QCAnB,MAAMO,EAAmBZ,IAAMa,KAAK,IAAM,qDACpCC,EAAiBd,IAAMa,KAAK,IAAM,+BAClCE,EAAmBf,IAAMa,KAAK,IAAM,qDACpCG,EAAQhB,IAAMa,KAAK,IAAM,qDAG/B,MAAMI,UAAYjB,IAAMC,UACpBiB,oBACIf,KAAKb,MAAM6B,gBAGfjB,SACI,OAAKC,KAAKb,MAAMkB,YAKZ,yBAAK3B,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAMuC,SAAP,CAAiBC,SAAU,kBAACC,EAAA,EAAD,OAC3B,yBAAKzC,UAAU,uBACX,kBAAC,IAAD,CAAO0C,KAAK,oBAAoBrB,OAAQ,IAAM,kBAACa,EAAD,QAC9C,kBAAC,IAAD,CAAOQ,KAAK,WAAWrB,OAAQ,IAAM,kBAACU,EAAD,QACrC,kBAAC,IAAD,CAAOW,KAAK,SAASrB,OAAQ,IAAM,kBAACY,EAAD,QACnC,kBAAC,IAAD,CAAOS,KAAK,SAASrB,OAAQ,IAAM,kBAACc,EAAD,WAZpC,kBAACM,EAAA,EAAD,OA8BJE,kBACXC,IACArB,YANqBC,IAAD,CACZG,YAAaH,EAAMqB,IAAIlB,cAKN,CAACW,cDxCD,IAAOQ,IAChC,IAAIC,EAAUD,EAASE,eACvBC,QAAQC,IAAI,CAACH,IACRI,KAAK,KACNL,EAL0B,CAAQhB,KAlBd,6BCyDba,CAEgCP,G,gBC3D/C,IAAIV,EAAe,CACf0B,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,YAQPC,MAJQ,CAAC/B,EAAQE,EAAcG,IACnCL,E,wBCDX,IAAIgC,EAAWC,YAAgB,CAC3BC,YAAaC,IACbC,YAAaC,IACbC,QAASP,EACTQ,UAAWC,IACXvC,KAAMwC,IACNC,KAAMC,IACNtB,IAAKjB,IAGT,MAAMwC,EAAmBzE,OAAO0E,sCAAwC1B,IAClE2B,EAAQC,YAAYf,EAASY,EAAiBI,YAAgBC,OACpE9E,OAAO2E,MAAQA,EAEAA,QCbXI,IAASrD,OACL,kBAAC,IAAD,CAAesD,SAAUC,YACrB,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,QAEUO,SAASC,eAAe,SRiH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9B,KAAK+B,IACjCA,EAAaC,gB,wLS9HnB,IAAIzD,EAAe,CACf0D,OAAQ,KACRC,MAAO,KACPtE,MAAO,KACPD,QAAQ,GAGZ,MAYawE,EAAkB,CAACF,EAAQC,EAAOtE,EAAOD,KAAvB,CAAoCgB,KArB7C,2BAsBlByD,QAAS,CAACH,SAAQC,QAAOtE,QAAOD,YAavBkC,EAAkB,2CAAM,WAAOF,GAAP,uBAAA0C,EAAA,sEACZC,IAAQC,KADI,OAEA,KAD7BC,EAD6B,QAEpBC,KAAKC,aAAmB,EACRF,EAASC,KAAKA,KAAlCvC,EAD2B,EAC3BA,GAAItC,EADuB,EACvBA,MAAOsE,EADgB,EAChBA,MAChBvC,EAASwC,EAAgBjC,EAAIgC,EAAOtE,GAAO,KAJd,2CAAN,sDAQlBA,EAAQ,CAACsE,EAAOS,EAAUC,IAAlB,uCAAiC,WAAOjD,GAAP,iBAAA0C,EAAA,sEAC7BC,IAAQ1E,MAAMsE,EAAOS,EAAUC,GADF,OAEb,KADjCJ,EAD8C,QAEjCC,KAAKC,WACd/C,EAASE,MAELgD,EAAUL,EAASC,KAAKK,SAASC,OAAS,EAAIP,EAASC,KAAKK,SAAS,GAAK,aAC9EnD,EAASqD,YAAW,QAAS,CAACC,OAAQJ,MANI,2CAAjC,sDASR/E,EAAS,2CAAM,WAAO6B,GAAP,SAAA0C,EAAA,sEACHC,IAAQxE,SADL,OAEa,IAFb,OAEP2E,KAAKC,YACd/C,EAASwC,EAAgB,KAAM,KAAM,MAAM,IAH3B,2CAAN,sDAOPrB,IAlDK,CAACzC,EAAQE,EAAcG,KACvC,OAAQA,EAAOC,MACX,IAXc,2BAYV,OAAO,2BACAN,GACAK,EAAO0D,SAElB,QACI,OAAO/D,K,gCCpBnB,sDAUeiB,IANEhC,GACN,yBAAKT,UAAWC,IAAEoG,SACrB,yBAAK1F,IAAK2F,IAAW1F,IAAI,O,mBCLjCpB,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,kNCK/D,IAAIiC,EAAe,CACf6E,MAAO,CACH,CAAClD,GAAI,EAAG2C,QAAS,oBAAqBQ,MAAO,KAC7C,CAACnD,GAAI,EAAG2C,QAAS,qBAAuBQ,MAAO,MAKnDC,QAAS,KACTC,OAAQ,IAGZ,MA2BaC,EAAwBC,IAAD,CAAmB9E,KA3CtC,WA2CsD8E,gBAE1DC,EAAaH,IAAD,CAAc5E,KA3CpB,aA2CsC4E,WAE5CI,EAAkB1B,GAAD,uCAAY,WAAOtC,GAAP,eAAA0C,EAAA,sEACjBuB,IAASC,WAAW5B,GADH,OAClCO,EADkC,OAEtC7C,EAL0B,CAAehB,KA3CpB,mBA2C4C2E,QAKzCd,EAASC,OAFK,2CAAZ,sDAIjBqB,EAAa7B,GAAD,uCAAY,WAAOtC,GAAP,eAAA0C,EAAA,sEACZ0B,IAAWD,UAAU7B,GADT,OAC7BO,EAD6B,OAEjC7C,EAAS+D,EAAUlB,EAASC,OAFK,2CAAZ,sDAKZuB,EAAgBT,GAAD,uCAAY,WAAO5D,GAAP,SAAA0C,EAAA,sEACf0B,IAAWC,aAAaT,GADT,OAEH,IAFG,OAEvBd,KAAKC,YACd/C,EAAS+D,EAAUH,IAHa,2CAAZ,sDAmBb/C,IA3DQ,CAACnC,EAAQE,EAAcG,KAC1C,OAAQA,EAAOC,MACX,IAlBS,WAmBL,IAAIsF,EAAU,CACV/D,GAAI,GACJ2C,QAASnE,EAAO+E,YAChBJ,MAAOa,KAAKC,KAAqB,GAAhBD,KAAKE,WAE1B,OAAO,2BACA/F,GADP,IAEI+E,MAAO,IAAI/E,EAAM+E,MAAOa,KAEhC,IA3BiB,mBA4Bb,OAAO,2BACA5F,GADP,IAEIiF,QAAS5E,EAAO4E,UAExB,IA/BW,aAgCP,OAAO,2BACAjF,GADP,IAEIkF,OAAQ7E,EAAO6E,SAEvB,QACI,OAAOlF,K,6ECvCnB,IAAIE,EAAe,CACfuE,SAAU,CACN,CAAC5C,GAAI,EAAG2C,QAAS,OACjB,CAAC3C,GAAI,EAAG2C,QAAS,QACjB,CAAC3C,GAAI,EAAG2C,QAAS,oBACjB,CAAC3C,GAAI,EAAG2C,QAAS,cACjB,CAAC3C,GAAI,EAAG2C,QAAS,aACjB,CAAC3C,GAAI,EAAG2C,QAAS,YACjB,CAAC3C,GAAI,EAAG2C,QAAS,QAErBwB,QAAS,CACL,CAACnE,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,WACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UAItB,MAgBamE,EAAsBC,IAAD,CAAsB5F,KAvCnC,eAuCuD4F,mBAE7D7D,IAlBQ,CAACrC,EAAQE,EAAcG,KAC1C,OAAQA,EAAOC,MACX,IAzBa,eA0BT,IAAI6F,EAAa,CACbtE,GAAI,EACJ2C,QAASnE,EAAO6F,gBAEpB,OAAO,2BACAlG,GADP,IAEIyE,SAAU,IAAIzE,EAAMyE,SAAU0B,KAEtC,QACI,OAAOnG,K,oPCzBnB,IAAIE,EAAe,CACfkG,MAAO,GACPC,SAAU,EACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAGzB,MAkDaC,EAAiB9C,IAAD,CAActD,KAnE5B,SAmE0CsD,WAC5C+C,EAAmB/C,IAAD,CAActD,KAnE5B,WAmE4CsD,WAEhDgD,EAAkBL,IAAD,CAAmBjG,KAnExB,mBAmEgDiG,gBAE5DM,EAAoBL,IAAD,CAAkBlG,KAnEvB,qBAmEiDkG,eAC/DM,EAA0B,CAACN,EAAY5C,KAAb,CACnCtD,KApEiC,+BAqEjCkG,aACA5C,WAGSmD,EAAW,CAACC,EAAMX,IAC3B,uCAAO,WAAO/E,GAAP,eAAA0C,EAAA,6DACH1C,EAASuF,GAAiB,IAC1BvF,EAASsF,EAAeI,IAFrB,SAIczB,IAASwB,SAASC,EAAMX,GAJtC,OAICjC,EAJD,OAKH9C,EAASuF,GAAiB,IAC1BvF,EAjBgB,CAAahB,KAnEnB,YAmEoC8F,MAiB5BhC,EAAK6C,QACvB3F,EAhB0B,CAAuBhB,KAnE3B,wBAmEwDgG,gBAgBlDlC,EAAK8C,aAP9B,2CAAP,sDAWEC,EAAkB,uCAAG,WAAO7F,EAAUsC,EAAQwD,EAAWC,GAApC,SAAArD,EAAA,6DACvB1C,EAASwF,GAAwB,EAAMlD,IADhB,SAEFwD,EAAUxD,GAFR,OAGU,IAHV,OAGVQ,KAAKC,YACd/C,EAAS+F,EAAczD,IAE3BtC,EAASwF,GAAwB,EAAOlD,IANjB,2CAAH,4DASX0D,EAAU1D,GACnB,uCAAO,WAAOtC,GAAP,SAAA0C,EAAA,sDACHmD,EAAmB7F,EAAUsC,EAAQ2B,IAAS+B,OAAOC,KAAKhC,KAAWmB,GADlE,2CAAP,sDAWSc,EAAY5D,GACrB,uCAAO,WAAOtC,GAAP,SAAA0C,EAAA,sDACHmD,EAAmB7F,EAAUsC,EAAQ2B,IAASiC,SAASD,KAAKhC,KAAWoB,GADpE,2CAAP,sDAaWnE,IA7GM,CAACxC,EAAQE,EAAcG,KAExC,OAAQA,EAAOC,MACX,IApBO,SAqBH,OAAO,2BACAN,GADP,IAGIoG,MAAOpG,EAAMoG,MAAMqB,IAAIC,GACfA,EAAE7F,KAAOxB,EAAOuD,OACT,2BAAI8D,GAAX,IAAcC,UAAU,IAErBD,KAGnB,IA9BS,WA+BL,OAAO,2BACA1H,GADP,IAGIoG,MAAOpG,EAAMoG,MAAMqB,IAAIC,GACfA,EAAE7F,KAAOxB,EAAOuD,OACT,2BAAI8D,GAAX,IAAcC,UAAU,IAErBD,KAGnB,IAxCU,YAyCN,OAAO,2BAAI1H,GAAX,IAAkBoG,MAAO/F,EAAO+F,QAEpC,IA1CiB,mBA2Cb,OAAO,2BAAIpG,GAAX,IAAkBuG,YAAalG,EAAOkG,cAE1C,IA5CsB,wBA6ClB,OAAO,2BAAIvG,GAAX,IAAkBsG,gBAAiBjG,EAAOiG,kBAE9C,IA9CmB,qBA+Cf,OAAO,2BAAItG,GAAX,IAAkBwG,WAAYnG,EAAOmG,aAEzC,IAhD6B,+BAiDzB,OAAO,2BACAxG,GADP,IAEIyG,oBAAqBpG,EAAOmG,WACtB,IAAIxG,EAAMyG,oBAAqBpG,EAAOuD,QACtC5D,EAAMyG,oBAAoBmB,OAAO/F,GAAMA,IAAOxB,EAAOuD,UAGnE,QACI,OAAO5D,K,mBCjEnBhC,EAAOC,QAAU,IAA0B,uC,mBCC3CD,EAAOC,QAAU,CAAC,QAAU,6B,+BCD5B,kHAEA,MAAM4J,EAAWC,SAAa,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAKN1C,EAAW,CACpBwB,SAAQ,CAACR,EAAc,EAAGF,EAAW,KAC1BwB,EAASK,IAAT,qBAA2B3B,EAA3B,kBAAgDF,IAClD1E,KAAKwC,GACKA,EAASC,MAG5BkD,OAAO1D,GACIiE,EAASM,KAAT,iBAAwBvE,IAEnC4D,SAAS5D,GACEiE,EAASO,OAAT,iBAA0BxE,IAErC4B,WAAW5B,IACPyE,QAAQC,KAAK,8CACN5C,EAAWF,WAAW5B,KAKxB8B,EAAa,CACtBF,WAAW5B,GACAiE,EAASK,IAAT,kBAAwBtE,IAEnC6B,UAAU7B,GACCiE,EAASK,IAAT,yBAA+BtE,IAE1C+B,aAAaT,GACF2C,EAASU,IAAT,iBAA+B,CAACrD,OAAQA,KAI1CjB,EAAU,CACnBC,GAAE,IACS2D,EAASK,IAAT,WAEX3I,MAAK,CAACsE,EAAOS,EAAUC,GAAa,IACzBsD,EAASM,KAAT,aAA4B,CAACtE,QAAOS,WAAUC,eAEzD9E,OAAM,IACKoI,EAASO,OAAT,iB","file":"static/js/main.9252fa6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2GNhH\",\"item\":\"Navbar_item__3blO1\",\"activeLink\":\"Navbar_activeLink__1HCpq\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        {/*<div className={s.item}>*/}\r\n        {/*    <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>*/}\r\n        {/*</div>*/}\r\n        {/*<div className={s.item}>*/}\r\n        {/*    <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>*/}\r\n        {/*</div>*/}\r\n        {/*<div className={s.item}>*/}\r\n        {/*    <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>*/}\r\n        {/*</div>*/}\r\n        {/*<div className={s.item}>*/}\r\n        {/*    <NavLink to=\"/friends\" activeClassName={s.activeLink}>Friends</NavLink>*/}\r\n        {/*</div>*/}\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src='https://e7.pngegg.com/pngimages/11/247/png-clipart-sitckman-meme-rage-comic-internet-meme-like-a-boss-trollface-like-a-boss-comics-white.png'\r\n            alt='logo'>\r\n        </img>\r\n\r\n        <div className={s.loginBlock}>\r\n            {\r\n                props.isAuth\r\n                    ? <div>\r\n                        <div>You entried as {props.login}</div>\r\n                        <button onClick={props.logout}>log out</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\n\r\n\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n// import Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <React.Suspense  fallback={<Preloader />}>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login\" render={() => <Login/>}/>\r\n                    {/*<Route path=\"/news\" render={News}/>*/}\r\n                    {/*<Route path=\"/music\" render={Music}/>*/}\r\n                    {/*<Route path=\"/settings\" render={Settings}/>*/}\r\n                    {/*<Route path=\"/friends\" render={() => <Friends*/}\r\n                    {/*    // store={props.store}*/}\r\n                    {/*/>}/>*/}\r\n                </div>\r\n                </React.Suspense>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n            initialized: state.app.initialized\r\n    });\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Diman',},\r\n        {id: 2, name: 'Misha',},\r\n        {id: 3, name: 'Andrey',},\r\n    ],\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport messageReducer from './messages-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagePage: messageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.store = store;\r\n\r\nexport default store;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n// let rerenderEntireTree = (state) => {\r\n    ReactDOM.render(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>, document.getElementById('root')\r\n    );\r\n// }\r\n\r\n// rerenderEntireTree(store.getState());\r\n// store.subscribe(() => {\r\n//     let state = store.getState();\r\n//     rerenderEntireTree(state);\r\n// });\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'nwapp/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}})\r\n\r\n\r\n// export const getAuthUserData = () => (dispatch) => {\r\n//     return authAPI.me()\r\n//         .then(response => {\r\n//         if (response.data.resultCode === 0) {\r\n//             let {email, id, login} = response.data.data;\r\n//             dispatch(setAuthUserData(id, email, login, true));\r\n//         }\r\n//     });\r\n// }\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n\r\nexport default authReducer;","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\nimport s from './Preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={s.preload}>\r\n        <img src={preloader} alt=''/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3KMls\",\"loginBlock\":\"Header_loginBlock__ufjca\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hey, how are you?', likes: 412},\r\n        {id: 2, message: 'It\\'s my third post', likes: 111},\r\n        // {id: 3, message: 'my third post', likes: 11},\r\n        // {id: 4, message: 'It\\'s third post', likes: 21},\r\n        // {id: 5, message: 'It\\'s my post', likes: 34},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: '',\r\n                message: action.newPostText,\r\n                likes: Math.ceil(Math.random() * 10),\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n// export const setUsersProfile = (userId) => ({\r\n//     return (dispatch) => {\r\n//     userId = this.props.match.params.userId;\r\n//     if (!userId) {\r\n//     userId = 9340;\r\n// }\r\n// axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n//     .then(response => {\r\n//         this.props.setUserProfile(response.data);\r\n//     });\r\n//\r\n// })\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Dude'},\r\n        {id: 3, message: 'How is ur skill?'},\r\n        {id: 4, message: 'It is cool'},\r\n        {id: 5, message: 'Keep calm'},\r\n        {id: 6, message: 'Going on'},\r\n        {id: 7, message: 'Cya'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Diman'},\r\n        {id: 2, name: 'Alina'},\r\n        {id: 3, name: 'Vova'},\r\n        {id: 4, name: 'Nikitos'},\r\n        {id: 5, name: 'Syoma'},\r\n        {id: 6, name: 'Pashok'},\r\n        {id: 7, name: 'Vlad'},\r\n    ],\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: 8,\r\n                message: action.newMessageBody,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default messageReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n\r\n        // dispatch(toggleFollowingProgress(true, userId));\r\n        // let response = await apiMethod(userId);\r\n        // if (response.data.resultCode === 0) {\r\n        //     dispatch(actionCreator(userId));\r\n        // }\r\n        // dispatch(toggleFollowingProgress(false, userId));\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n\r\n        // dispatch(toggleFollowingProgress(true, userId));\r\n        // let response = await apiMethod(userId);\r\n        // if (response.data.resultCode === 0) {\r\n        //     dispatch(actionCreator(userId));\r\n        // }\r\n        // dispatch(toggleFollowingProgress(false, userId));\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.de50e2e9.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preload\":\"Preloader_preload__3CTQg\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"cd0e5f14-9142-4bdc-a7b4-acf0c5b6306f\"\r\n    },\r\n\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n}"],"sourceRoot":""}