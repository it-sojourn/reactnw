{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.js","utils/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Element","input","meta","props","hasError","touched","error","className","s","formControl","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","React","render","this","to","connect","DialogItem","path","id","dialog","src","alt","Message","message","maxLength15","Textarea","AddMessageReduxForm","reduxForm","form","addMessage","onSubmit","handleSubmit","Field","Dialogs","messagePage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsitems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,6JCGlH,MASMC,EAAUA,GAAY,IAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC3D,MAAMC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OAAO,yBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,KAC/D,6BAAK,kBAACN,EAAD,iBAAaC,EAAWE,KAE5BC,GAAY,8BAAOF,EAAKI,SAKpBI,EAAc,CAACC,EAAaC,EAAMC,EAAYC,EAAWX,EAAQ,GAAIY,EAAO,KACrF,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAAMI,SAAUH,EAAYC,UAAWA,GAAeX,IAC5FY,I,iCC1BT,oEAAO,MAAME,EAAYC,IACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAoBC,GAAeF,IAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,iCCNlC,qEAIA,IAAIE,EAA8BC,IAAD,CAC7BC,OAAQD,EAAME,KAAKD,SAIhB,MAAME,EAAoBC,IAC7B,MAAMC,UAA0BC,IAAMF,UAClCG,SACI,OAAKC,KAAK5B,MAAMqB,OACT,kBAACG,EAAcI,KAAK5B,OADI,kBAAC,IAAD,CAAU6B,GAAI,YAOrD,OAFqCC,YAASX,EAATW,CAAqCL,K,oBChB9E9B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,8FCezMmC,MAZK/B,IAChB,IAAIgC,EAAO,YAAchC,EAAMiC,GAE/B,OACI,yBAAK7B,UAAWC,IAAE6B,QACd,yBAAKC,IAAI,0FAA0FC,IAAI,KACvG,kBAAC,IAAD,CAASP,GAAIG,GAAOhC,EAAMS,QCCvB4B,MARErC,GAET,6BACI,yBAAKI,UAAWC,IAAEiC,SAAUtC,EAAMsC,U,oCCE9C,MA2BMC,EAAcvB,YAAiB,IAC/BwB,EAAW3C,YAAQ,YAqBnB4C,EAAsBC,YAAU,CAClCC,KAAM,cADkBD,CApBJ1C,GACb,yBAAKI,UAAWC,IAAEuC,YACrB,0BAAMC,SAAU7C,EAAM8C,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOpC,UAAW6B,EAAU/B,KAAM,iBAC3BD,YAAa,iBACpBK,SAAU,CAACC,IAAUyB,MAMzB,6BAEI,4CAUDS,MArDEhD,IACb,IAAIoB,EAAQpB,EAAMiD,YAEdC,EAAkB9B,EAAM+B,QAAQC,IAChCC,GAAK,kBAAC,EAAD,CAAYC,IAAKD,EAAEpB,GAAIxB,KAAM4C,EAAE5C,KAAMwB,GAAIoB,EAAEpB,MAEhDsB,EAAmBnC,EAAMoC,SAASJ,IAClCK,GAAK,kBAAC,EAAD,CAASH,IAAKG,EAAExB,GAAIK,QAASmB,EAAEnB,WAQxC,OACI,yBAAKlC,UAAWC,IAAE8C,SACd,yBAAK/C,UAAWC,IAAEqD,cACbR,GAEL,yBAAK9C,UAAWC,IAAEmD,UACbD,GAEL,kBAACd,EAAD,CAAqBI,SAbRc,IACjB3D,EAAM4D,YAAYD,EAAOE,qB,yBCwBlBC,sBACXhC,YAhBmBV,IACZ,CACH6B,YAAa7B,EAAM6B,YACnB5B,OAAQD,EAAME,KAAKD,SAGD0C,IACf,CACHH,YAAcC,IACVE,EAASC,YAAmBH,QAQpCtC,IAFWuC,CAGbd","file":"static/js/6.fba723c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2dijs\",\"error\":\"FormControls_error__35aL2\",\"formSummaryError\":\"FormControls_formSummaryError__JkNzc\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div><textarea {...input} {...props} /></div>\r\n\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div><Element {...input} {...props} /></div>\r\n\r\n        {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />\r\n        {text}\r\n    </div>\r\n)","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__jx-E6\",\"dialogsitems\":\"Dialogs_dialogsitems__2KJsQ\",\"dialog\":\"Dialogs_dialog__SMWng\",\"messages\":\"Dialogs_messages__7MXLe\",\"message\":\"Dialogs_message__1M8yI\",\"addMessage\":\"Dialogs_addMessage__Qj_I7\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src='https://mir-s3-cdn-cf.behance.net/project_modules/disp/42498a22728563.560469f893794.png' alt=''></img>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagePage;\r\n\r\n    let dialogsElements = state.dialogs.map(\r\n        d => <DialogItem key={d.id} name={d.name} id={d.id}/>\r\n    )\r\n    let messagesElements = state.messages.map(\r\n        m => <Message key={m.id} message={m.message}/>\r\n    )\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsitems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst Textarea = Element('textarea');\r\nconst AddMessageForm = (props) => {\r\n    return <div className={s.addMessage}>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Write anything'}\r\n                validate={[required, maxLength15]}\r\n                />\r\n                    {/*<textarea onChange={onNewMessageChange}*/}\r\n                    {/*          placeholder='Write anything'*/}\r\n                    {/*          value={newMessageBody}/>*/}\r\n            </div>\r\n            <div>\r\n                {/*<button onClick={onSendMessageClick}>Add message</button>*/}\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'addMessage'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n// const DialogsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState().messagePage;\r\n//                     let onSendMessageClick = () => {\r\n//                         store.dispatch(sendMessageCreator());\r\n//                     };\r\n//                     let onNewMessageChange = (body) => {\r\n//                         store.dispatch(updateNewMessageBodyCreator(body));\r\n//                     };\r\n//                     return (<Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                                      sendMessage={onSendMessageClick}\r\n//                                      messagePage={state}/>)\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagePage: state.messagePage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}